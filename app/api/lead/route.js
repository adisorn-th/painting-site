export const runtime = "nodejs"; // ‡πÉ‡∏ä‡πâ Node runtime (Nodemailer ‡πÉ‡∏ä‡πâ Edge ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ)

import nodemailer from "nodemailer";

function sanitize(s = "") {
  return String(s || "").toString().slice(0, 2000);
}

export async function POST(req) {
  try {
    const data = await req.json();

    const name = sanitize(data.name);
    const phone = sanitize(data.phone);
    const email = sanitize(data.email);
    const location = sanitize(data.location);
    const service = sanitize(data.service);
    const detail = sanitize(data.detail);
    const honeypot = sanitize(data.website); // ‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏´‡∏•‡∏ö‡∏™‡πÅ‡∏õ‡∏°

    // ‡∏Å‡∏±‡∏ô‡∏ö‡∏≠‡∏ó: ‡∏ñ‡πâ‡∏≤ honeypot ‡∏ñ‡∏π‡∏Å‡∏Å‡∏£‡∏≠‡∏Å ‡πÉ‡∏´‡πâ‡∏ï‡∏≠‡∏ö ok ‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡∏™‡πà‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•
    if (honeypot) {
      return Response.json({ ok: true });
    }

    if (!name || !phone) {
      return new Response(JSON.stringify({ ok: false, message: "‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏•‡∏∞‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£" }), { status: 400 });
    }

    // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ SMTP ‡∏à‡∏≤‡∏Å .env
    const transporter = nodemailer.createTransport({
      host: process.env.SMTP_HOST,
      port: Number(process.env.SMTP_PORT || 465),
      secure: (process.env.SMTP_SECURE || "true") !== "false", // true = 465
      auth: {
        user: process.env.SMTP_USER,
        pass: process.env.SMTP_PASS,
      },
    });

    const TO = process.env.TO_EMAIL || process.env.SMTP_USER;
    const FROM = process.env.FROM_EMAIL || `"‡∏™‡∏°‡∏û‡∏£‡πÄ‡∏û‡πâ‡∏ô‡∏ó‡πå‡πÇ‡∏õ‡∏£" <no-reply@yourdomain.com>`;

    const subject = `Lead ‡πÉ‡∏´‡∏°‡πà‡∏à‡∏≤‡∏Å‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå ‚Äî ${name} (${phone})`;
    const html = `
      <div style="font-family: system-ui, -apple-system, Segoe UI, Roboto, 'Noto Sans Thai', sans-serif; line-height:1.6;">
        <h2>üì© Lead ‡πÉ‡∏´‡∏°‡πà‡∏à‡∏≤‡∏Å‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå</h2>
        <table style="border-collapse: collapse;">
          <tr><td style="padding:4px 8px;">‡∏ä‡∏∑‡πà‡∏≠</td><td style="padding:4px 8px;"><b>${name}</b></td></tr>
          <tr><td style="padding:4px 8px;">‡πÇ‡∏ó‡∏£</td><td style="padding:4px 8px;"><a href="tel:${phone}">${phone}</a></td></tr>
          ${email ? `<tr><td style="padding:4px 8px;">‡∏≠‡∏µ‡πÄ‡∏°‡∏•</td><td style="padding:4px 8px;">${email}</td></tr>` : ""}
          ${location ? `<tr><td style="padding:4px 8px;">‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà</td><td style="padding:4px 8px;">${location}</td></tr>` : ""}
          ${service ? `<tr><td style="padding:4px 8px;">‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£</td><td style="padding:4px 8px;">${service}</td></tr>` : ""}
        </table>
        ${detail ? `<p style="margin-top:12px"><b>‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î:</b><br/>${detail.replace(/\n/g,"<br/>")}</p>` : ""}
        <hr/>
        <p style="color:#64748b;font-size:12px">‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏ô‡∏µ‡πâ‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏à‡∏≤‡∏Å‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö ‡∏™‡∏°‡∏û‡∏£‡πÄ‡∏û‡πâ‡∏ô‡∏ó‡πå‡πÇ‡∏õ‡∏£</p>
      </div>
    `;
    const text =
`Lead ‡πÉ‡∏´‡∏°‡πà‡∏à‡∏≤‡∏Å‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå
‡∏ä‡∏∑‡πà‡∏≠: ${name}
‡πÇ‡∏ó‡∏£: ${phone}
‡∏≠‡∏µ‡πÄ‡∏°‡∏•: ${email || "-"}
‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà: ${location || "-"}
‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£: ${service || "-"}
‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î:
${detail || "-"}`;

    await transporter.sendMail({
      from: FROM,
      to: TO,
      subject,
      html,
      text,
      replyTo: email || undefined,
    });

    return Response.json({ ok: true });
  } catch (err) {
    console.error("MAIL_ERR:", err);
    return new Response(JSON.stringify({ ok: false, message: "‡∏™‡πà‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à" }), { status: 500 });
  }
}
